[gcode_macro CANCEL_PRINT]
description: CYD_SCREEN_MACRO
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  G28 X Y


[gcode_macro UNLOAD_FILAMENT]
description: CYD_SCREEN_MACRO
gcode:
    M104 S200                  ; Set extruder temperature to 200°C
    M109 S200                  ; Wait for extruder temperature to reach 200°C
    G92 E0                      ; Reset the extruder position
    G1 E-120 F300              ; Retract the filament by 120mm at a speed of 300mm/min
    G92 E0                      ; Reset the extruder position again
    M104 S0                    ; Turn off the extruder heater (optional)

[gcode_macro LOAD_FILAMENT]
description: CYD_SCREEN_MACRO
gcode:
    M104 S200                  ; Set extruder temperature to 200°C
    M109 S200                  ; Wait for extruder temperature to reach 200°C
    G92 E0                      ; Reset the extruder position
    G1 E120 F300               ; Feed 120mm of filament at a speed of 300mm/min
    G92 E0                      ; Reset the extruder position again
    M104 S0                    ; Turn off the extruder heater (optional)

[gcode_macro EXTRUDE_10MM]
description: CYD_SCREEN_MACRO
gcode:
    M104 S200                 ; Heat extruder to 200°C
    M109 S200                 ; Wait for extruder to reach 200°C
    G92 E0                    ; Reset extruder position
    G1 E10 F300               ; Extrude 10mm of filament
    G92 E0                    ; Reset extruder position

[gcode_macro PAUSE_PRINT]
description: CYD_SCREEN_MACRO
gcode:
    # Save current position and extruder state
    SAVE_GCODE_STATE NAME=PAUSE_STATE
    
    # Retract filament by 5mm (adjust this value if needed)
    G91
    G1 E-5 F300
    
    # Move Z up by 10mm to avoid damaging the print
    G1 Z10 F6000
    
    # Switch back to absolute positioning
    G90
    
    # Move the nozzle to the side (adjust X/Y as needed for your machine)
    G1 X0 Y0 F6000
    
    # Pause the print
    M0

[gcode_macro RESUME_PRINT]
description: CYD_SCREEN_MACRO
gcode:
    # Restore saved state
    RESTORE_GCODE_STATE NAME=PAUSE_STATE

[gcode_macro COOL_DOWN]
description: CYD_SCREEN_MACRO
gcode:
    M104 S0                   ; Turn off extruder heater
    M140 S0                   ; Turn off bed heater
    M107                      ; Turn off fan

[gcode_macro PRINT_STATS]
description: CYD_SCREEN_MACRO
gcode:
    M117 Print Time: {print_time} ; Display print time
    M117 Filament Used: {filament_used} ; Display filament usage
    M117 Layer: {current_layer}/{total_layers} ; Display current layer and total layers

[gcode_macro TRAM_FRONT_LEFT]
description: CYD_SCREEN_MACRO
gcode:
    # Move to home position
    G28
    # Move to front left corner
    G1 X28 Y36 Z0 F6000
    PAUSE

[gcode_macro TRAM_FRONT_RIGHT]
description: CYD_SCREEN_MACRO
gcode:
    # Move to front right corner
    G1 X197 Y34 Z0 F6000
    PAUSE

[gcode_macro TRAM_BACK_RIGHT]
description: CYD_SCREEN_MACRO
gcode:
    # Move to back right corner
    G1 X197 Y206 Z0 F6000
    PAUSE

[gcode_macro TRAM_BACK_LEFT]
description: CYD_SCREEN_MACRO
gcode:
    # Move to back left corner
    G1 X28 Y

[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED
    


